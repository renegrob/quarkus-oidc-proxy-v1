# Example NGINX configuration for working with the OAuth Delegate service

# Define the OAuth delegate service
upstream oauth_delegate {
    server 127.0.0.1:8080;
}

# Server configuration
server {
    listen 80;
    server_name example.com;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name example.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Optional: Additional security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # OAuth Delegate service
    location /oauth/ {
        proxy_pass http://oauth_delegate/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Protected Application
    location / {
        # Authentication check
        auth_request /oauth/nginx/auth;
        auth_request_set $auth_token $upstream_http_x_auth_token;
        auth_request_set $auth_user_id $upstream_http_x_auth_user_id;

        # Forward authentication data to backend
        proxy_set_header X-Auth-Token $auth_token;
        proxy_set_header X-Auth-User-ID $auth_user_id;

        # Error handling - redirect to login on 401
        error_page 401 = @error401;

        # Proxy to your application
        proxy_pass http://your_backend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirect to login page on authentication failure
    location @error401 {
        # Save the original URL for redirection after login
        set $original_uri $scheme://$host$request_uri;

        # Redirect to login with specified identity provider (e.g., "entra")
        return 302 /oauth/nginx/login/entra?redirect_uri=$original_uri;
    }
}